2*3
654/23
log(36)
source("~/.active-rstudio-document")
x<-pi/2
x<-pi/2
cos(x)
sin(x)
tan(x)
print(x)
cos(y*pi/180)
y<-90
cos(y*pi/180)
sin(y*pi/180)
tan(y*pi/180)
y <- c(2,5,1,7)
mean(y)
y[3]
a <- matrix(c(1, 1, 1, 2), nrow = 2)
b <- matrix(c(1, 3, 2, 4), ncol = 2)
c <- matrix(c(1,4,2,5,3,6),nrow=3,ncol=2)
c[3,1]
dim(c)
source("~/GitHub/aberlanas/R-Learning/Tema01-UsoDeR/MiPrimerScript/tarea01.R")
source("~/GitHub/aberlanas/R-Learning/Tema01-UsoDeR/MiPrimerScript/tarea01.R")
print(a+b)
print(a-b)
print(a/b)
print(a*b)
print(crossprod(a,b))
print(tcrossprod(a,b))
A <- matrix(c(1,2,3,4),nrow=2,ncol=2)
B <- matrix(c(-1,-2,-3,-4),nrow = 2,ncol = 2)
print(A)
print(B)
#Producto matricial
A %*% B
#Traspuesta
t(A)
#Inversa
solve(A)
help(t)
install.packages(“forecast”)
install.packages("forecast")
#5x = 10. Encontrar x
solve(5,10)
#5x = 10. Encontrar x
solve(5,10)
solve(a,b)
## Operaciones con matrices
## para sistemas de ecucaciones
a <- matrix(c(3,1,2,1),nrow=2,ncol=2)
b <- matrix(c(8,2),nrow=2,ncol=1)
solve(a,b)
## Operaciones con matrices
## para sistemas de ecucaciones
matriz_a <- matrix(c(3,1,2,1),nrow=2,ncol=2)
matriz_b <- matrix(c(8,2),nrow=2,ncol=1)
solve(matriz_a,matriz_b)
